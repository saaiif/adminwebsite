{"ast":null,"code":"var _jsxFileName = \"D:\\\\admindashboard\\\\src\\\\components\\\\Admin\\\\chartlines.js\";\nimport React, { Component } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\nimport classes from './charts.module.css';\n\nclass Chartlines extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        labels: ['Red', 'Aqua', 'Green', 'Yellow', 'purple', 'Orange', 'Blue'],\n        datasets: [{\n          label: '# of Hits',\n          // backgroundColor: 'rgba(255,0,255,0.75)',\n          data: [33, 40, 28, 49, 58, 38, 44],\n          backgroundColor: ['rgba(255, 77, 77,1.0)', 'rgba(85, 239, 196,1.0)', 'rgba(184, 233, 148,1.0)', 'rgba(255, 242, 0,1.0)', 'rgba(197, 108, 240,1.0)', 'rgba(255, 159, 26,1.0)', 'rgba(87, 95, 207,1.0)'],\n          barPercentage: 0.25,\n          fill: false,\n          pointBorderColor: 'rgba(220,220,220,1)',\n          pointBackgroundColor: '#fff',\n          fontColor: '#fff',\n          lineTension: 0\n        }]\n      }\n    };\n  } // setGradientColor = (canvas, color) => {\n  // \tconst ctx = canvas.getContext('2d');\n  // \tconst gradient = ctx.createLinearGradient(0, 0, 0, 0);\n  // \tgradient.addColorStop(0, color);\n  // \tgradient.addColorStop(0.95, 'rgba(133,122,255,0.5)');\n  // \treturn gradient;\n  // };\n  // getCharData = (canvas) => {\n  // \tconst data = this.state.data;\n  // \tif (data.datasets) {\n  // \t\tlet colors = [ 'rgba(255,0,255,0.75)', 'rgba(0,255,0,0.75)', 'rgba(125,0,255,0.75)' ];\n  // \t\tdata.datasets.forEach((set, i) => {\n  // \t\t\t// set.label = this.setGradientColor(canvas, colors[i]);\n  // \t\t\tset.borderWidth = 0;\n  // \t\t});\n  // \t}\n  // \treturn data;\n  // };\n\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        width: '500px',\n        minHeight: '250px',\n        height: '100%',\n        maxHeight: '450px',\n        color: 'red',\n        padding: '40px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        color: '#fff',\n        fontSize: '1.1rem',\n        fontWeight: 700,\n        marginBottom: '30px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Performance\"), React.createElement(HorizontalBar, {\n      data: {\n        labels: this.props.labels,\n        datasets: this.props.data\n      },\n      options: {\n        legend: {\n          fullWidth: 'false',\n          backgroundColor: 0,\n          labels: {\n            fontColor: '#fff'\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: '#fff'\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontColor: '#fff'\n            }\n          }]\n        },\n        responsive: true,\n        title: {\n          display: this.props.display,\n          text: this.props.title\n        }\n      },\n      data: this.getCharData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Chartlines;","map":{"version":3,"sources":["D:/admindashboard/src/components/Admin/chartlines.js"],"names":["React","Component","HorizontalBar","classes","Chartlines","constructor","props","state","data","labels","datasets","label","backgroundColor","barPercentage","fill","pointBorderColor","pointBackgroundColor","fontColor","lineTension","render","width","minHeight","height","maxHeight","color","padding","fontSize","fontWeight","marginBottom","legend","fullWidth","scales","xAxes","ticks","yAxes","responsive","title","display","text","getCharData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { HorizontalBar } from 'react-chartjs-2';\r\nimport classes from './charts.module.css';\r\n\r\nclass Chartlines extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: {\r\n\t\t\t\tlabels: [ 'Red', 'Aqua', 'Green', 'Yellow', 'purple', 'Orange', 'Blue' ],\r\n\t\t\t\tdatasets: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tlabel: '# of Hits',\r\n\t\t\t\t\t\t// backgroundColor: 'rgba(255,0,255,0.75)',\r\n\t\t\t\t\t\tdata: [ 33, 40, 28, 49, 58, 38, 44 ],\r\n\t\t\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t\t\t'rgba(255, 77, 77,1.0)',\r\n\t\t\t\t\t\t\t'rgba(85, 239, 196,1.0)',\r\n\t\t\t\t\t\t\t'rgba(184, 233, 148,1.0)',\r\n\t\t\t\t\t\t\t'rgba(255, 242, 0,1.0)',\r\n\t\t\t\t\t\t\t'rgba(197, 108, 240,1.0)',\r\n\t\t\t\t\t\t\t'rgba(255, 159, 26,1.0)',\r\n\t\t\t\t\t\t\t'rgba(87, 95, 207,1.0)'\r\n\t\t\t\t\t\t],\r\n\t\t\t\t\t\tbarPercentage: 0.25,\r\n\t\t\t\t\t\tfill: false,\r\n\t\t\t\t\t\tpointBorderColor: 'rgba(220,220,220,1)',\r\n\t\t\t\t\t\tpointBackgroundColor: '#fff',\r\n\r\n\t\t\t\t\t\tfontColor: '#fff',\r\n\t\t\t\t\t\tlineTension: 0\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\t// setGradientColor = (canvas, color) => {\r\n\t// \tconst ctx = canvas.getContext('2d');\r\n\t// \tconst gradient = ctx.createLinearGradient(0, 0, 0, 0);\r\n\t// \tgradient.addColorStop(0, color);\r\n\t// \tgradient.addColorStop(0.95, 'rgba(133,122,255,0.5)');\r\n\t// \treturn gradient;\r\n\t// };\r\n\r\n\t// getCharData = (canvas) => {\r\n\t// \tconst data = this.state.data;\r\n\t// \tif (data.datasets) {\r\n\t// \t\tlet colors = [ 'rgba(255,0,255,0.75)', 'rgba(0,255,0,0.75)', 'rgba(125,0,255,0.75)' ];\r\n\t// \t\tdata.datasets.forEach((set, i) => {\r\n\t// \t\t\t// set.label = this.setGradientColor(canvas, colors[i]);\r\n\r\n\t// \t\t\tset.borderWidth = 0;\r\n\t// \t\t});\r\n\t// \t}\r\n\t// \treturn data;\r\n\t// };\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: '500px',\r\n\t\t\t\t\tminHeight: '250px',\r\n\t\t\t\t\theight: '100%',\r\n\t\t\t\t\tmaxHeight: '450px',\r\n\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\tpadding: '40px'\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h3 style={{ color: '#fff', fontSize: '1.1rem', fontWeight: 700, marginBottom: '30px' }}>\r\n\t\t\t\t\tPerformance\r\n\t\t\t\t</h3>\r\n\t\t\t\t<HorizontalBar\r\n\t\t\t\t\tdata={{\r\n\t\t\t\t\t\tlabels: this.props.labels,\r\n\t\t\t\t\t\tdatasets: this.props.data\r\n\t\t\t\t\t}}\r\n\t\t\t\t\toptions={{\r\n\t\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\t\tfullWidth: 'false',\r\n\t\t\t\t\t\t\tbackgroundColor: 0,\r\n\t\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\t\tfontColor: '#fff'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tscales: {\r\n\t\t\t\t\t\t\txAxes: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\t\t\tfontColor: '#fff'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\tyAxes: [\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tticks: {\r\n\t\t\t\t\t\t\t\t\t\tfontColor: '#fff'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tresponsive: true,\r\n\t\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\t\tdisplay: this.props.display,\r\n\t\t\t\t\t\t\ttext: this.props.title\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdata={this.getCharData}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Chartlines;\r\n"]},"metadata":{},"sourceType":"module"}