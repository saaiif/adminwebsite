{"ast":null,"code":"var _jsxFileName = \"D:\\\\admindashboard\\\\src\\\\components\\\\Admin\\\\chartlines.js\";\nimport React, { Component } from 'react';\nimport { HorizontalBar } from 'react-chartjs-2';\n\nclass Perfomance extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      graph: {\n        labels: Object.keys(JSON.parse(localStorage.getItem(\"Response\")).dasbhoardPage.performance).map(item => item),\n        datasets: [{\n          label: '# of hits',\n          data: Object.values(JSON.parse(localStorage.getItem(\"Response\")).dasbhoardPage.performance).map(item => item),\n          backgroundColor: ['rgba(255, 77, 77,1.0)', 'rgba(85, 239, 196,1.0)', 'rgba(184, 233, 148,1.0)', 'rgba(255, 242, 0,1.0)', 'rgba(197, 108, 240,1.0)', 'rgba(255, 159, 26,1.0)', 'rgba(87, 95, 207,1.0)'],\n          barPercentage: 0.25\n        }]\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(HorizontalBar, {\n      options: {\n        responsive: true,\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        legend: {\n          labels: {\n            fontColor: \"#fff\"\n          }\n        },\n        scales: {\n          xAxes: [{\n            ticks: {\n              fontColor: \"#fff\"\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              fontColor: \"#fff\"\n            },\n            scaleLabel: {\n              display: true,\n              labelString: \"Hits\",\n              fontColor: \"#fff\"\n            }\n          }]\n        }\n      },\n      data: this.state.graph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Perfomance;","map":{"version":3,"sources":["D:/admindashboard/src/components/Admin/chartlines.js"],"names":["React","Component","HorizontalBar","Perfomance","state","graph","labels","Object","keys","JSON","parse","localStorage","getItem","dasbhoardPage","performance","map","item","datasets","label","data","values","backgroundColor","barPercentage","render","responsive","elements","point","radius","legend","fontColor","scales","xAxes","ticks","yAxes","scaleLabel","display","labelString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,aAAR,QAA4B,iBAA5B;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CACA;AAAA;AAAA;AAAA,SACIG,KADJ,GACU;AACFC,MAAAA,KAAK,EAAC;AACFC,QAAAA,MAAM,EAAEC,MAAM,CAACC,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC,aAA7C,CAA2DC,WAAvE,EAAoFC,GAApF,CAAwFC,IAAI,IAAEA,IAA9F,CADN;AAEFC,QAAAA,QAAQ,EAAC,CAAC;AACNC,UAAAA,KAAK,EAAE,WADD;AAENC,UAAAA,IAAI,EAAEZ,MAAM,CAACa,MAAP,CAAcX,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CC,aAA7C,CAA2DC,WAAzE,EAAsFC,GAAtF,CAA0FC,IAAI,IAAEA,IAAhG,CAFA;AAGNK,UAAAA,eAAe,EAAE,CAC5B,uBAD4B,EAE5B,wBAF4B,EAG5B,yBAH4B,EAI5B,uBAJ4B,EAK5B,yBAL4B,EAM5B,wBAN4B,EAO5B,uBAP4B,CAHX;AAYNC,UAAAA,aAAa,EAAE;AAZT,SAAD;AAFP;AADJ,KADV;AAAA;;AAoBIC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AACA,MAAA,OAAO,EAAE;AACLC,QAAAA,UAAU,EAAC,IADN;AAELC,QAAAA,QAAQ,EAAC;AACLC,UAAAA,KAAK,EACL;AACIC,YAAAA,MAAM,EAAC;AADX;AAFK,SAFJ;AAQLC,QAAAA,MAAM,EAAC;AACHtB,UAAAA,MAAM,EAAC;AAACuB,YAAAA,SAAS,EAAC;AAAX;AADJ,SARF;AAWLC,QAAAA,MAAM,EAAC;AACHC,UAAAA,KAAK,EAAC,CAAC;AACHC,YAAAA,KAAK,EACL;AACIH,cAAAA,SAAS,EAAC;AADd;AAFG,WAAD,CADH;AAOHI,UAAAA,KAAK,EAAC,CAAC;AACHD,YAAAA,KAAK,EACL;AACIH,cAAAA,SAAS,EAAC;AADd,aAFG;AAKHK,YAAAA,UAAU,EAAC;AACPC,cAAAA,OAAO,EAAC,IADD;AAEPC,cAAAA,WAAW,EAAC,MAFL;AAGPP,cAAAA,SAAS,EAAC;AAHH;AALR,WAAD;AAPH;AAXF,OADT;AAkCA,MAAA,IAAI,EAAE,KAAKzB,KAAL,CAAWC,KAlCjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAwCH;;AA7DL;;AAgEA,eAAeF,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\n\r\nclass Perfomance extends Component\r\n{\r\n    state={\r\n        graph:{\r\n            labels: Object.keys(JSON.parse(localStorage.getItem(\"Response\")).dasbhoardPage.performance).map(item=>item),\r\n            datasets:[{\r\n                label: '# of hits',\r\n                data: Object.values(JSON.parse(localStorage.getItem(\"Response\")).dasbhoardPage.performance).map(item=>item),\r\n                backgroundColor: [\r\n\t\t\t\t\t'rgba(255, 77, 77,1.0)',\r\n\t\t\t\t\t'rgba(85, 239, 196,1.0)',\r\n\t\t\t\t\t'rgba(184, 233, 148,1.0)',\r\n\t\t\t\t\t'rgba(255, 242, 0,1.0)',\r\n\t\t\t\t\t'rgba(197, 108, 240,1.0)',\r\n\t\t\t\t\t'rgba(255, 159, 26,1.0)',\r\n\t\t\t\t\t'rgba(87, 95, 207,1.0)'\r\n\t\t\t\t],\r\n                barPercentage: 0.25,\r\n            }]\r\n        }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <HorizontalBar\r\n                options={{\r\n                    responsive:true,\r\n                    elements:{\r\n                        point:\r\n                        {\r\n                            radius:0\r\n                        }\r\n                    },\r\n                    legend:{\r\n                        labels:{fontColor:\"#fff\"}\r\n                    },\r\n                    scales:{\r\n                        xAxes:[{\r\n                            ticks:\r\n                            {\r\n                                fontColor:\"#fff\"\r\n                            }\r\n                        }],\r\n                        yAxes:[{\r\n                            ticks:\r\n                            {\r\n                                fontColor:\"#fff\"\r\n                            },\r\n                            scaleLabel:{\r\n                                display:true,\r\n                                labelString:\"Hits\",\r\n                                fontColor:\"#fff\"\r\n                            }\r\n                        }]\r\n                },\r\n                \r\n                }\r\n            }\r\n                data={this.state.graph}\r\n            />  \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Perfomance;"]},"metadata":{},"sourceType":"module"}